@model smartGPS.Areas.Dashboard.Models.SetupTravelModel

<script src="~/Scripts/Dashboard/setupNavigations.js"></script>

<legend>New travel</legend>

<p>
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer sapien nunc, condimentum eget ultrices at, commodo nec velit. Vivamus id venenatis augue. Nulla magna magna, laoreet feugiat mi eget, posuere placerat libero. Phasellus sed dolor enim. 
</p>

<!-- Button to trigger modal -->
<a href="#myModal" role="button" class="btn btn-primary" data-toggle="modal">Setup travel</a>

<!-- Modal -->
<div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        <h3 id="myModalLabel">Setup navigation</h3>
    </div>

    @using (Html.BeginForm("SetupTravel", "Travel", FormMethod.Post, new { @id = "setupNavigation" }))
    {
        <div class="modal-body">

            <ul class="nav nav-tabs">
                <li class="active"><a href="#departure-tab" data-toggle="tab">Departure</a></li>
                <li><a href="#destination-tab" data-toggle="tab">Destination</a></li>
            </ul>

            <div class="tab-content">
                <div class="tab-pane active" id="departure-tab">
                    <div class="control-group">
                        @Html.LabelFor(m => m.DepartureType, new { @class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(m => m.DepartureType, (IEnumerable<SelectListItem>)ViewBag.TypesOfNavigation, "Select a value")
                        </div>

                    </div>
                    <div id="startAddress" style="float: none">
                        @Html.LabelFor(m => m.StartAddress, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.StartAddress, new { placeholder = "Address", @class = "input-xlarge" })
                            @Html.ValidationMessageFor(m => m.StartAddress)
                        </div>
                    </div>

                    <div id="startLatitude" class="control-group" style="float: left">
                        @Html.LabelFor(m => m.StartLatitude, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.StartLatitude, new { placeholder = "Latitude", onkeypress = "return isNumberKey(event)", name = "latitude" })
                            @Html.ValidationMessageFor(m => m.StartLatitude)
                        </div>
                    </div>
                    <div id="startLongitude" class="control-group" style="float: right">
                        @Html.LabelFor(m => m.StartLongitude, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.StartLongitude, new { placeholder = "Longitude", onkeypress = "return isNumberKey(event)", name = "longitude" })
                            @Html.ValidationMessageFor(m => m.StartLongitude)
                        </div>
                    </div>

                    <button class="btn btn-primary" id="find-departure" aria-hidden="true">Find departure</button>

                    <div style="display: table-cell; padding-top: 10px" name="types">
                        @Html.DropDownListFor(m => m.DepartureDropdown, (IEnumerable<SelectListItem>)ViewBag.Destinations, "Select a value")
                    </div>

                    <div id="departure" class="control-group" style="padding-top: 10px">
                        @Html.LabelFor(m => m.Departure, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Departure, new { placeholder = "Destination", @class = "input-xlarge" })
                            @Html.ValidationMessageFor(m => m.Departure)
                        </div>
                    </div>
                </div>

                <div class="tab-pane" id="destination-tab">

                    <div id="destination-type" class="control-group">
                        @Html.LabelFor(m => m.DestinationType, new { @class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(m => m.DestinationType, (IEnumerable<SelectListItem>)ViewBag.TypesOfNavigation, "Select a value")

                        </div>
                    </div>
                    <div id="address" style="float: none">
                        @Html.LabelFor(m => m.Address, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Address, new { placeholder = "Address", @class = "input-xlarge" })
                            @Html.ValidationMessageFor(m => m.Address)
                        </div>
                    </div>

                    <div id="latitude" class="control-group" style="float: left">
                        @Html.LabelFor(m => m.Latitude, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Latitude, new { placeholder = "Latitude", onkeypress = "return isNumberKey(event)", name = "latitude" })
                            @Html.ValidationMessageFor(m => m.Latitude)
                        </div>
                    </div>
                    <div id="longitude" class="control-group" style="float: right">
                        @Html.LabelFor(m => m.Longitude, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Longitude, new { placeholder = "Longitude", onkeypress = "return isNumberKey(event)", name = "longitude" })
                            @Html.ValidationMessageFor(m => m.Longitude)
                        </div>
                    </div>

                    <button class="btn btn-primary" id="find-destination" aria-hidden="true">Find destination</button>

                    <div style="display: table-cell; padding-top: 10px" name="types">
                        @Html.DropDownListFor(m => m.DestinationDropdown, (IEnumerable<SelectListItem>)ViewBag.Destinations, "Select a value")
                    </div>

                    <div id="destination" class="control-group" style="padding-top: 10px">
                        @Html.LabelFor(m => m.Destination, new { @class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Destination, new { placeholder = "Destination", @class = "input-xlarge" })
                            @Html.ValidationMessageFor(m => m.Destination)
                        </div>
                    </div>
                </div>
            </div>



        </div>
        <div class="modal-footer">
            <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
            <button class="btn btn-success" type="submit" id="submitButton">Continue</button>
        </div>
    }
</div>

<script type="text/javascript">

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

</script>
